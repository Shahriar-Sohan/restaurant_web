name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: AWS ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image for ARM64
        run: |
          docker buildx build --platform linux/arm64 \
            -t ${{ secrets.ECR_REPOSITORY }}:latest \
            --push .

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }} && \
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest && \
            (docker stop restaurant || true) && \
            (docker rm restaurant || true) && \
            docker run -d --restart unless-stopped --name restaurant -p 80:3000 ${{ secrets.ECR_REPOSITORY }}:latest && \
            docker exec restaurant npx prisma generate && \
            docker exec restaurant npx prisma migrate deploy && \
            docker image prune -f